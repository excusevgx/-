#include<stdio.h>
#include<string.h>
#include<stdlib.h> 

struct Student
{
	int Id;
	int Age;
	char Name[100];
	struct Student* next;
};

struct Student* headP=NULL;
struct Student* tailP=NULL;

printfStudent(struct Student* curP)
{
	printf("学号:%d   年龄:%d   名字:%s\n",curP->Id,curP->Age,curP->Name);
}

void printfLinkedList(struct Student* headP)
{
	while(headP!=NULL)
	{
		printfStudent(headP);
		headP=headP->next;
	}
}

void addStudent()
{
	struct Student* nodeP=(struct Student*)malloc(sizeof(struct Student));
	printf("请输入学号：");
	scanf("%d",&nodeP->Id);
	printf("请输入年龄：");
	scanf("%d",&nodeP->Age);
	printf("请输入姓名：");
	scanf("%s",&nodeP->Name);
	nodeP->next=NULL;
	if(headP==NULL)
	{
		headP=nodeP;
		tailP=nodeP;
	}
	else
	{
		tailP->next=nodeP;
		tailP=nodeP;
		printf("添加成功\n");
	}
}

void findStudent()
{
	printf("请输入想要查询的学生学号\n");
	int id;
	scanf("%d",&id);
	struct Student* curP=headP;
	int flag=0;
	while(curP!=NULL)
	{
		if(curP->Id==id)
		{
			printfStudent(curP);
			flag=1;break;
		}
		else
			curP=curP->next;
	}
	if(flag==0)
		printf("没有这个学生\n");
}

void printfAllStudent()
{
	if(headP==NULL)
		printf("当前没有学生\n");
	else
		printfLinkedList(headP);
}

int deleteStudent()
{
	printf("请输入要删除的学生学号:");
	int id;
	scanf("%d",&id);
	struct Student* curP=headP;
	if(curP->Id==id)
	{
		headP=headP->next;
		free(curP);
		curP=NULL;
		return 0;
	}
	struct Student* preP=curP;
	curP=curP->next;
	if(curP!=NULL)
	{
		if(curP->Id==id)
		{
			struct Student* next=curP->next;
			preP->next=next;
			free(curP);
			curP=NULL;
			printf("已删除该学生\n");
			return 1;
		}
		else
		{
			preP=curP;
			curP=curP->next;
		}
	}
	printf("该学生不存在\n");
}

int main()
{
	printf("欢迎使用简易学生信息管理系统\n"); 
	printf("按1添加学生\n"); 
	printf("按2查询学生\n"); 
	printf("按3打印所有学生\n"); 
	printf("按4删除学生\n");
	printf("按5退出程序\n"); 
	
	while(1)
	{
		char c;
		scanf("%c",&c);
		switch(c)
		{
			case '1':addStudent();break;
			case '2':findStudent();break;
			case '3':printfAllStudent();break;
			case '4':deleteStudent();break;
			case '5':exit(0);
			default:break;
		}
	}
	return 0;
}
